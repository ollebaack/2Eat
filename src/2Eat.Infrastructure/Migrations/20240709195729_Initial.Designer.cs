// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2Eat.Infrastructure;

#nullable disable

namespace _2Eat.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240709195729_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("IngredientRecipe", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientsId", "RecipesId");

                    b.HasIndex("RecipesId");

                    b.ToTable("IngredientRecipe");
                });

            modelBuilder.Entity("_2Eat.Domain.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vetemjöl",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Strösocker",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ägg",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Smör",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mjölk",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Grädde",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Potatis",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Lax",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 9,
                            Name = "Dill",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 11,
                            Name = "Rödbetor",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 12,
                            Name = "Räkor",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 13,
                            Name = "Kavring",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 14,
                            Name = "Västerbottensost",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 15,
                            Name = "Renkött",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 16,
                            Name = "Lingon",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Kanel",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 18,
                            Name = "Kardemumma",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 19,
                            Name = "Älgkött",
                            RecipeId = 0
                        },
                        new
                        {
                            Id = 20,
                            Name = "Surströmming",
                            RecipeId = 0
                        });
                });

            modelBuilder.Entity("_2Eat.Domain.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("IngredientRecipe", b =>
                {
                    b.HasOne("_2Eat.Domain.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2Eat.Domain.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
