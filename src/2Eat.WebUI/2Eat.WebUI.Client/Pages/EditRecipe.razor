@page "/recipe"
@page "/recipe/{Id:int}"

@rendermode @(new InteractiveWebAssemblyRenderMode(false))
@attribute [StreamRendering]
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager

@if (Id.HasValue)
{
    <PageTitle>Recipe</PageTitle>
    @if (isEditingName)
    {
        <EditForm Model="recipe" OnSubmit="HandleSubmit">
            <InputText @bind-Value="recipe.Name" class="form-control" />
        </EditForm>
    }
    else
    {
        <h3>@recipe.Name <i class="fas fa-pencil-alt fa-xs" @onclick="() => isEditingName = true"></i></h3>
    }
}
else
{
    <PageTitle>Create Recipe</PageTitle>
    <h3>Create Recipe</h3>
}
<hr />

@if (!Id.HasValue)
{
    <EditForm Model="recipe" OnSubmit="HandleSubmit">
        <InputText @bind-Value="recipe.Name">@recipe.Name</InputText>
    </EditForm>
    <hr />
}

@* <EditForm Model="recipe"> *@
    <Ingredients @bind-IngredientsList="recipe.Ingredients" />
@* </EditForm> *@

<h5>Instructions</h5>
<EditForm Model="recipe" OnSubmit="HandleSubmit">
    <InputTextArea @bind-Value="recipe.Instructions">@recipe.Instructions</InputTextArea>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    private string ingredient = string.Empty;
    private Recipe recipe = new Recipe() { Name = string.Empty, Ingredients = new List<Ingredient>() };
    private bool isEditingName = false;


    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            recipe = await RecipeService.GetRecipeByIdAsync(Id.Value) ?? throw new Exception($"{nameof(recipe)} was null.");
        }
    }

    protected async Task HandleSubmit()
    {
        if (Id.HasValue)
        {
            recipe = await RecipeService.UpdateRecipeAsync(Id.Value, recipe);
            isEditingName = false;
        }
        else
        {
            recipe = await RecipeService.AddRecipeAsync(recipe);
            NavigationManager.NavigateTo($"/recipe/{recipe.Id}");
        }
    }
}