@page "/recipe"
@page "/recipe/{Id:int}/edit"

@* @rendermode @(new InteractiveWebAssemblyRenderMode(false)) *@
@attribute [StreamRendering]
@inject IClient Client
@inject NavigationManager NavigationManager

@if (Id.HasValue)
{
    <PageTitle>Recept</PageTitle>
    @if (isEditingName)
    {
        <EditForm Model="recipe" OnSubmit="HandleSubmit">
            <InputText @bind-Value="recipe.Name" class="form-control" />
        </EditForm>
    }
    else
    {
        <h3>@recipe.Name <i class="fas fa-pencil-alt fa-xs" @onclick="() => isEditingName = true"></i></h3>
    }
}
else
{
    <PageTitle>Skapa Recept</PageTitle>
    <h3>Skapa Recept</h3>
}
<hr />

<FileUppload></FileUppload>

@if (recipe.ImageUrl is not null)
{
    <p>
        <img src="@recipe.ImageUrl" />
    </p>
}

@if (!Id.HasValue)
{
    <EditForm Model="recipe" OnSubmit="HandleSubmit">
        <InputText @bind-Value="recipe.Name">@recipe.Name</InputText>
    </EditForm>
}
<hr />

<RecipeIngredients @bind-IngredientsList="recipe.Ingredients" Edit=true />

<h5>Instruktioner</h5>
<EditForm Model="recipe" OnSubmit="HandleSubmit">
    <InputTextArea @bind-Value="recipe.Instructions" rows="10" style="width: 40vw">@recipe.Instructions</InputTextArea>
    <br />
    <button type="submit" class="btn btn-primary">Spara</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    private Recipe recipe = new Recipe();
    private bool isEditingName = false;


    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            Client.SetEntityEndpoint("recipes");
            recipe = await Client.GetByIdAsync<Recipe>(Id.Value);
        }
    }

    protected async Task HandleSubmit()
    {
        if (Id.HasValue)
        {
            Client.SetEntityEndpoint("recipes");
            recipe = await Client.UpdateAsync<Recipe, Recipe>(Id.Value, recipe);
            isEditingName = false;
        }
        else
        {
            Client.SetEntityEndpoint("recipes");
            recipe = await Client.CreateAsync<Recipe, Recipe>(recipe);
        }

        NavigationManager.NavigateTo($"/recipe/{recipe.Id}");
    }
}