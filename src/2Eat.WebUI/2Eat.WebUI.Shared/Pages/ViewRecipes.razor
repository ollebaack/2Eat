@page "/recipes"
@attribute [StreamRendering]
@* @rendermode @(new InteractiveWebAssemblyRenderMode(false)) *@
@inject IClient Client
@inject NavigationManager NavigationManager

<PageTitle>Recipes</PageTitle>

<h3>Recipes</h3>

<AddReceipyButton />

<br />
<br />

@if (recipes == null)
{
    <span>Loading...</span>
}
else if (recipes.Count == 0)
{
    <span>There are no added receipies yet.</span>
}
else
{
    @* <div class="recipe-card-list">
        @foreach (var recipe in recipes)
        {
            <div class="recipe-card" @onclick="() => GetRecipe(recipe.Id)">
                @recipe.Name
            </div>
        }   
    </div> *@
    @foreach (var recipe in recipes)
    {
        <div class="card" style="width: 18rem;">
            <img src="@recipe.ImageUrl" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">@recipe.Name</h5>
                <p class="card-text">@recipe.Description</p>
                <a href="#" class="btn btn-primary" @onclick="() => GetRecipe(recipe.Id)">Go somewhere</a>
            </div>
        </div>
    }   
}


@code {
    List<Recipe>? recipes;

    protected override async Task OnParametersSetAsync()
    {
        Client.SetEntityEndpoint("recipes");
        recipes ??= await Client.GetAsync<Recipe>();
    }
    private void GetRecipe(int id)
    {
        NavigationManager.NavigateTo($"/recipe/{id}");
    }
}